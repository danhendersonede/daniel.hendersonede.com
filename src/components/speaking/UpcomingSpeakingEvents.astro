---
import { getCollection } from 'astro:content';
import {
  getUpcomingEvents,
  getPrimaryEventLink,
  formatEventDate,
} from '@utils/speaking-events';
import EventTime from '@components/EventTime.tsx';
import CTALink from '@components/CTALink.astro';
import Tag from '@components/tag.astro';
import { Image } from 'astro:assets';
import calendarIcon from '@phosphor-icons/core/assets/regular/calendar.svg';
import clockIcon from '@phosphor-icons/core/assets/regular/clock.svg';
import globeIcon from '@phosphor-icons/core/assets/regular/globe.svg';
import mapPinIcon from '@phosphor-icons/core/assets/regular/map-pin.svg';
import tagIcon from '@phosphor-icons/core/assets/regular/tag.svg';
import microphoneStageIcon from '@phosphor-icons/core/assets/regular/microphone-stage.svg';

const allEvents = await getCollection('speakingEvents');
const upcomingSpeakingEvents = getUpcomingEvents(allEvents);
---

{
  upcomingSpeakingEvents.length > 0 ? (
    <section class="upcoming-speaking-events">
      <h2>{upcomingSpeakingEvents.length} Upcoming Events</h2>
      <ul role="list">
        {upcomingSpeakingEvents.map(event => {
          const primaryLink = getPrimaryEventLink(event);
          return (
            <li class="event-card" role="listitem">
              <h3 class="event-title">{event.data.title}</h3>
              <p class="event-conference">
                <Image
                  src={microphoneStageIcon}
                  alt=""
                  loading="eager"
                  class="icon"
                />
                <span>{event.data.event}</span>
              </p>
              <div class="event-metadata">
                <div class="metadata-item">
                  <Image
                    src={calendarIcon}
                    alt=""
                    loading="eager"
                    class="icon"
                  />
                  <time datetime={event.data.date.toISOString()}>
                    {formatEventDate(event.data.date)}
                  </time>
                </div>
                {event.data.startTime && (
                  <div class="metadata-item">
                    <Image
                      src={clockIcon}
                      alt=""
                      loading="eager"
                      class="icon"
                    />
                    <EventTime
                      startTime={event.data.startTime}
                      endTime={event.data.endTime}
                      client:load
                    />
                  </div>
                )}
                <div class="metadata-item">
                  {event.data.format === 'virtual' ? (
                    <Image
                      src={globeIcon}
                      alt=""
                      loading="eager"
                      class="icon"
                    />
                  ) : (
                    <Image
                      src={mapPinIcon}
                      alt=""
                      loading="eager"
                      class="icon"
                    />
                  )}
                  <span>{event.data.location}</span>
                </div>
                <div class="metadata-item">
                  <Image
                    src={tagIcon}
                    alt="Price"
                    loading="eager"
                    class="icon"
                  />
                  <Tag
                    type={event.data.cost === 'Free' ? 'primary' : 'secondary'}
                  >
                    {event.data.cost}
                  </Tag>
                </div>
              </div>
              {primaryLink && (
                <CTALink href={primaryLink.url} fullWidth arrowPosition="after">
                  {primaryLink.text}
                </CTALink>
              )}
            </li>
          );
        })}
      </ul>
    </section>
  ) : null
}

<style>
  ul {
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    margin: 0;
    display: flex;
    gap: var(--spacing-m);
    padding: var(--spacing-m) var(--spacing-m) var(--spacing-m) 0;
    scroll-padding-right: var(--spacing-m);
    list-style: none;
  }

  .event-card {
    flex: 0 0 auto;
    scroll-snap-align: start;
    scroll-snap-stop: always;
    min-width: 22rem;
    position: relative;
    background: var(--background-color);
    border: 2px solid var(--background-color-accent);
    border-radius: var(--border-radius);
    padding: var(--spacing-l);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    display: flex;
    flex-direction: column;
    gap: var(--spacing-s);
  }

  .event-title {
    margin: 0;
    color: var(--color-text-accent);
    font-weight: var(--font-weight-bold);
  }

  .event-conference {
    margin: 0;
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    font-size: var(--font-size-xs);
    font-weight: var(--font-weight-bold);
  }

  .event-metadata {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-s);
  }

  .metadata-item {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs);
    font-size: var(--font-size-xs);
  }

  @media (min-width: 768px) {
    ul {
      gap: var(--spacing-l);
      padding: var(--spacing-l) var(--spacing-l) var(--spacing-l) 0;
    }
  }

  @media (max-width: 767px) {
    ul {
      gap: var(--spacing-m);
      padding: var(--spacing-m) var(--spacing-m) var(--spacing-m) 0;
    }

    .event-card {
      min-width: 0;
      width: calc(100vw - 3rem);
      padding: var(--spacing-m);
    }

    .event-metadata {
      grid-template-columns: 1fr;
      gap: var(--spacing-xs);
    }
  }
</style>
